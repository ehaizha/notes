1. Most importantly, We can use local variable as final in an anonymous inner class, 
    Non-final local variables canâ€™t be used for inner classes
2. It may allow Java compiler or Just In Time compiler to optimize code, knowing that 
   the variable value will not change. This can improve the processing time of the program.
3. Final is the only applicable modifier for local variables
4. public class FinalTest {

    public static final int N_ITERATIONS = 1000000;

    public static String testFinal() {
        final String a = "a";
        final String b = "b";
        return a + b;
    }

    public static String testNonFinal() {
        String a = "a";
        String b = "b";
        return a + b;
    }

    public static void main(String[] args) {
        long tStart, tElapsed;

        tStart = System.currentTimeMillis();
        for (int i = 0; i < N_ITERATIONS; i++)
            testFinal();
        tElapsed = System.currentTimeMillis() - tStart;
        System.out.println("Method with finals took " + tElapsed + " ms");

        tStart = System.currentTimeMillis();
        for (int i = 0; i < N_ITERATIONS; i++)
            testNonFinal();
        tElapsed = System.currentTimeMillis() - tStart;
        System.out.println("Method without finals took " + tElapsed + " ms");

    }

  }
  The result?

   Method with finals took 5 ms
   Method without finals took 273 ms   